apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-demo-fargate
  namespace: default
spec:
 replicas: 3
 selector:
   matchLabels:
     app: "nginx-demo-fargate"
 template:
   metadata:
     labels:
       app: "nginx-demo-fargate"
     name: "nginx-demo-fargate-pod"
     annotations:
       ad.datadoghq.com/nginx-demo-ctr.check_names: '["nginx"]'
       ad.datadoghq.com/nginx-demo-ctr.init_configs: '[{}]'
       ad.datadoghq.com/nginx-demo-ctr.instances: '[{"nginx_status_url": "http://%%host%%:81/nginx_status/"}]'
   spec:
     serviceAccountName: datadog-agent
     shareProcessNamespace: true
     volumes:
       - name: "config"
         configMap:
           name: "nginxconfig"
       - name: app-logs
         emptyDir: {}
       - name: fluent-bit-config
         configMap:
           name: fluent-bit-config
     containers:
     - name: nginx-demo-ctr
       image: nginx
       resources:
         limits:
           cpu: "2"
         requests:
           cpu: "1.5"
       ports:
       - containerPort: 81
       volumeMounts:
       - name: "config"
         mountPath: "/etc/nginx/nginx.conf"
         subPath: "nginx.conf"
       - mountPath: /var/log/containers
         name: app-logs
       env:
         - name: DD_AGENT_HOST
           valueFrom:
             fieldRef:
               fieldPath: status.hostIP
         - name: DATADOG_TRACE_AGENT_HOSTNAME
           valueFrom:
             fieldRef:
               fieldPath: status.hostIP
     - name: fluent-bit
       image: fluent/fluent-bit:latest
       volumeMounts:
       - name: fluent-bit-config
         mountPath: /fluent-bit/etc
       - name: app-logs
         mountPath: /var/log/containers
       resources:
         limits:
           memory: 500Mi
         requests:
           cpu: 500m
           memory: 100Mi
     ## Running the Agent as a sidecar
     - name: datadog-agent
       image: datadog/agent
       ports:
         - containerPort: 8126
           name: traceport
           protocol: TCP
       env:
         - name: DD_API_KEY
           value: "<MY_DATADOG_API_KEY>"
           ## Set DD_SITE to "datadoghq.eu" to send your
           ## Agent data to the Datadog EU site
         - name: DD_SITE
           value: "datadoghq.com"
         - name: DD_EKS_FARGATE
           value: "true"
         - name: DD_KUBERNETES_KUBELET_NODENAME
           valueFrom:
             fieldRef:
               apiVersion: v1
               fieldPath: spec.nodeName
         - name: DD_APM_ENABLED
           value: "true"
         - name: DD_APM_NON_LOCAL_TRAFFIC
           value: "true"
         - name: DD_TAGS
           value: "availability-zone:us-west-1b"
       resources:
         requests:
           memory: "512Mi"
           cpu: "800m"
         limits:
           memory: "512Mi"
           cpu: "800m"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginxconfig
  namespace: default
data:
  nginx.conf: |+
    events {}
    http {
        access_log /var/log/containers/access.log combined;
        error_log /var/log/containers/error.log info;
        server {
            listen 81;
            server_name localhost;
            location /nginx_status {
              stub_status on;
              access_log off;
              allow all;
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  labels:
    app.kubernetes.io/name: fluentbit
data:
  fluent-bit.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
    [OUTPUT]
        Name           datadog
        Match          *
        Host           http-intake.logs.datadoghq.com
        TLS            on
        apikey         <MY_DATADOG_API_KEY>
        dd_service     my-web-app
        dd_source      nginx
        dd_tags        availability-zone:us-west-2a
